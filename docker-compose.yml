version: '3'

networks :
  ais-network:
    driver: bridge


services:

  ais-producer:
    build: "./nodered"
    depends_on:
      - message_bus
    restart: on-failure
    volumes:
      - "./data/ais-producer:/data"
    ports:
      - "1880:1880"
    networks:
      - ais-network

  ais-worker-database:
    build: "./nodered"
    depends_on:
      - message_bus
      - database
    restart: on-failure
    volumes:
      - "./data/ais-worker-database:/data"
    ports:
      - "1881:1880"
    networks:
      - ais-network

  ais-worker-file:
    build: "./nodered"
    depends_on:
      - message_bus
    restart: on-failure
    volumes:
      - "./data/ais-worker-file:/data"
    ports:
      - "1882:1880"
    networks:
      - ais-network

  message_bus:
    build: "./rabbitmq"
    restart: on-failure
    ports:
      - "15672:15672" 
    networks:
      - ais-network

  database:
    image: influxdb
    restart: on-failure
    volumes: 
      - "./data/database:/var/lib/influxdb"
    environment:
      - INFLUXDB_DB=aisdb
      - INFLUXDB_ADMIN=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_USER=aisdb
      - INFLUXDB_PASSWORD=aisdb
    networks:
      - ais-network
      
  grafana:
    image: "grafana/grafana"
    depends_on:
      - database
    restart: on-failure
    volumes: 
      - "./data/grafana:/var/lib/grafana"
    ports:
      - "3000:3000"
    networks:
      - ais-network

  logspout:
    image: bekt/logspout-logstash
    depends_on:
      - logstash
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    environment:
      ROUTE_URIS: logstash://logstash:5000
    networks:
      - ais-network

  logstash:
    image: logstash:6.5.4
    restart: on-failure
    command: -e "input { udp { port => 5000 codec => json } } filter { if [docker][image] =~ /^logstash/ {  drop { } } } output { elasticsearch { hosts => "elasticsearch" } }"
    networks:
      - ais-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.0
    restart: on-failure
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      xpack.security.enabled: "false"
    networks:
      - ais-network

  kibana:
    image: docker.elastic.co/kibana/kibana:5.5.2
    restart: on-failure
    ports:
      - "5601:5601"
    environment:
      xpack.security.enabled: "false"
    depends_on:
      - elasticsearch
    networks:
      - ais-network

  kibana_index_pattern:
    image: ubuntu
    command: |
      bash -c "sleep 30 ; curl 'http://kibana:5601/es_admin/.kibana/index-pattern/logstash-*/_create' -H 'kbn-version: 5.5.2' -H 'content-type: application/json' --data-binary '{\"title\":\"logstash-*\",\"timeFieldName\":\"@timestamp\",\"notExpandable\":true}'"
    depends_on:
      - kibana
    networks:
      - ais-network


  # metricbeat:
  #   image: docker.elastic.co/beats/metricbeat:5.6.3
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock
  #   depends_on:
  #     - elasticsearch

  # metricbeat-dashboard-setup:
  #   image: docker.elastic.co/beats/metricbeat:5.6.3
  #   command: ./scripts/import_dashboards -es http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch




